name: Trial Build

on: [push, pull_request]

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 1.8, 11 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile     
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build e test do projeto
      run: mvn -f pom.xml clean verify
    - name: Atualização das dependências
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target/exemplo-1.0.0.jar
  deploy: 
    runs-on: ubuntu-latest  
    needs: build 
    name: Deploy
    steps:
    - uses: actions/checkout@v1
    - name: Download Maven builder
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Build do Docker Container 
      run: |
        mkdir -p target
        mv artifact/exemplo-1.0.0.jar target
        docker build -t gabruw .
    - name: Gerar número da build
      env: 
        SUPER_SECRET: ${{ secrets.SUPER_SECRET }}
      run: echo "Build - $SUPER_SECRET"
  sonarQubeTrigger:
    runs-on: ubuntu-latest
    needs: deploy 
    name: SonarQube
    steps:
    - uses: actions/checkout@master
    - name: Scan
      uses: kitabisa/sonarqube-action@master
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
